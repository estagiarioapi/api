import { BadRequestException, Injectable } from '@nestjs/common';
import axios from 'axios';
const url = 'https://graph.facebook.com/v19.0/374765715711006/messages';

@Injectable()
export class ReplyService {
  async replyMessagePeca(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üìù Compreendido, chefe! J√° estou redigindo a sua pe√ßa‚Ä¶ | Tempo m√©dio de resposta: 30 segundos',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyMessageContrato(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üìÑ Excelente, chefe! J√° estou formulando o seu contrato‚Ä¶ | Tempo m√©dio de resposta: 30 segundos',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyMessageNotificacao(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üì® Perfeito, chefe! J√° estou produzindo a sua notifica√ß√£o extrajudicial. | Tempo m√©dio de resposta: 30 segundos',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyMessageAuxiliar(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üßë‚Äç‚öñÔ∏è Entendido. J√° estou preparando a resposta, chefe! | Tempo m√©dio de resposta: 30 segundos',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyAnswerGpt(phoneNumber: string, text: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: text,
      },
    };

    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyAfterAnswerPeca(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'interactive',
      interactive: {
        type: 'button',
        body: {
          text: 'Feito, chefe! Caso esteja satisfeito com a sua pe√ßa e deseje retornar ao menu com todas as funcionalidades, ou queira realizar alguma altera√ß√£o em sua peti√ß√£o, basta selecionar a op√ß√£o desejada abaixo. ‚¨áÔ∏è ',
        },
        action: {
          buttons: [
            {
              type: 'reply',
              reply: {
                id: '1020',
                title: 'Quero editar',
              },
            },
            {
              type: 'reply',
              reply: {
                id: '1021',
                title: 'Voltar ao menu',
              },
            },
          ],
        },
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyAfterAnswerContrato(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'interactive',
      interactive: {
        type: 'button',
        body: {
          text: 'Feito, chefe! Caso esteja satisfeito com o seu contrato e deseje retornar ao menu com todas as funcionalidades, ou queira realizar alguma altera√ß√£o em seu documento, basta selecionar a op√ß√£o desejada abaixo. ‚¨áÔ∏è  ',
        },
        action: {
          buttons: [
            {
              type: 'reply',
              reply: {
                id: '1020',
                title: 'Quero editar',
              },
            },
            {
              type: 'reply',
              reply: {
                id: '1021',
                title: 'Voltar ao menu',
              },
            },
          ],
        },
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyAfterAnswerNotificacao(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'interactive',
      interactive: {
        type: 'button',
        body: {
          text: 'Feito, chefe! Caso esteja satisfeito com a sua notifica√ß√£o extrajudicial e deseje retornar ao menu com todas as funcionalidades, ou queira realizar alguma altera√ß√£o em seu documento, basta selecionar a op√ß√£o desejada abaixo. ‚¨áÔ∏è ',
        },
        action: {
          buttons: [
            {
              type: 'reply',
              reply: {
                id: '1020',
                title: 'Quero editar',
              },
            },
            {
              type: 'reply',
              reply: {
                id: '1021',
                title: 'Voltar ao menu',
              },
            },
          ],
        },
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyAfterEditOptionSelected(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üëç Entendido, chefe! O que gostaria que eu editasse, aprimorasse ou corrigisse na pe√ßa? \n Indique a altera√ß√£o em uma √∫nica mensagem.',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyDocumentoRecebido(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'üìÑ Pronto, Chefe! Agora pode me fazer questionamentos a respeito das informa√ß√µes contidas no arquivo.',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyInputDocumentoRecebido(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: '‚úçÔ∏è Entendido. J√° estou gerando sua resposta, chefe! | Tempo m√©dio de resposta: 30 segundos',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyLead(phoneNumber: string, waitListNumber: number) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const messages = [
      {
        text: 'Ol√°, chefe! Prazer, sou o *EstagIArio*, seu novo assistente jur√≠dico! üßë‚Äç‚öñÔ∏è',
      },
      {
        text: 'Voc√™ est√° na *lista de espera*, o que significa que est√° a um passo de ter o *assistente jur√≠dico* mais eficiente do mercado, dedicado ao seu dia a dia',
      },
      {
        text: `‚û°Ô∏è Sua posi√ß√£o atual √© *n.¬∫ ${waitListNumber}*`,
      },
    ];
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    for (const message of messages) {
      const messagePayload = {
        messaging_product: 'whatsapp',
        recipient_type: 'individual',
        to: phoneNumber,
        type: 'text',
        text: { body: message.text },
      };

      try {
        const response = await axios.post(url, messagePayload, { headers });
        if (response.status !== 200) throw new Error('Failed to send message');
      } catch (error) {
        console.error('Error sending message:', error);
        return false;
      }
    }
  }

  async replyLeadOption(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'interactive',
      interactive: {
        type: 'button',
        body: {
          text: 'Devido ao grande n√∫mero de inscritos na nossa lista de espera, os acessos ao per√≠odo de teste gratuito est√£o sendo liberados gradualmente. Contudo, preparamos algo especial para voc√™, por ser um pioneiro dessa revolu√ß√£o jur√≠dica. Quer conferir, chefe? ',
        },
        action: {
          buttons: [
            {
              type: 'reply',
              reply: {
                id: '1022',
                title: 'Sim',
              },
            },
            {
              type: 'reply',
              reply: {
                id: '1023',
                title: 'N√£o',
              },
            },
          ],
        },
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }
  }

  async replyLeadOptionYes(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'Estaremos liberando tr√™s convites que voc√™ poder√° enviar para colegas (profissionais jur√≠dicos), possibilitando adiantar sua posi√ß√£o na fila a cada novo cadastro pelo seu link. \nSegue abaixo o link com seu convite. Estaremos te atualizando sobre o seu avan√ßo na fila de espera \n*Obrigado desde j√°! Seja bem vindo ao futuro da advocacia. \nEssa promo√ß√£o possui validade de 48 horas.*',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }

  async replyLeadOptionNo(phoneNumber: string) {
    if (!phoneNumber) {
      throw new BadRequestException('Favor fornecer o numero do usu√°rio');
    }
    const headers = {
      Authorization: process.env.ACCESS_TOKEN,
      'Content-Type': 'application/json',
    };
    const messagePayload = {
      messaging_product: 'whatsapp',
      recipient_type: 'individual',
      to: phoneNumber,
      type: 'text',
      text: {
        body: 'Ok! Assim que chegar sua posi√ß√£o na fila, enviaremos uma mensagem te informando. Obrigado desde j√°!',
      },
    };
    try {
      const response = await axios.post(url, messagePayload, { headers });
      if (response.status !== 200) throw new Error('Failed to send message');
    } catch (error) {
      console.error('Error sending message:', error);
      return false;
    }

    return true;
  }
}
